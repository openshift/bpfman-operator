# Build the manager binary
ARG BUILDPLATFORM

FROM --platform=$BUILDPLATFORM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:v1.23 AS bpfman-agent-build

# The following ARGs are set internally by docker/build-push-action in github actions
ARG TARGETOS
ARG TARGETARCH
ARG TARGETPLATFORM

ARG BUILDPLATFORM

RUN echo "TARGETOS=${TARGETOS}  TARGETARCH=${TARGETARCH}  BUILDPLATFORM=${BUILDPLATFORM}  TARGETPLATFORM=${TARGETPLATFORM}"

WORKDIR /usr/src/bpfman-operator

# Copy everything except what's excluded by the .dockerignore file.
COPY . .

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
ENV GOEXPERIMENT=strictfipsruntime
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -tags strictfipsruntime -mod vendor -o bpfman-agent ./cmd/bpfman-agent/main.go

FROM --platform=$BUILDPLATFORM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:v1.23 AS cri-tools-build

# The following ARGs are set internally by docker/build-push-action in github actions
ARG TARGETOS
ARG TARGETARCH
ARG TARGETPLATFORM

ARG BUILDPLATFORM

RUN echo "TARGETOS=${TARGETOS}  TARGETARCH=${TARGETARCH}  BUILDPLATFORM=${BUILDPLATFORM}  TARGETPLATFORM=${TARGETPLATFORM}"

WORKDIR /usr/src/cri-tools
ARG CRI_REPO_URL=https://github.com/kubernetes-sigs/cri-tools
ARG CRI_REPO_TAG=v1.32.0

RUN git clone --depth 1 --branch $CRI_REPO_TAG $CRI_REPO_URL .

# Build
RUN GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} VERSION=$CRI_REPO_TAG make
RUN cp ./build/bin/${TARGETOS}/${TARGETARCH}/crictl .

FROM --platform=$TARGETPLATFORM registry.access.redhat.com/ubi9/ubi-minimal:9.6-1749489516

ARG TARGETARCH
ARG TARGETPLATFORM

WORKDIR /
COPY --from=bpfman-agent-build /usr/src/bpfman-operator/bpfman-agent .

# Install crictl
COPY --from=cri-tools-build /usr/src/cri-tools/crictl /usr/local/bin
RUN chmod +x /usr/local/bin/crictl
COPY LICENSE /licenses/

LABEL name="bpfman/bpfman-agent" \
      com.redhat.component="bpfman-agent" \
      io.k8s.display-name="Bpfman Agent" \
      summary="Bpfman agent manages the eBPF programs lifecycle." \
      description="The bpfman-agent manage bpfman ebpf programs on every node." \
      io.k8s.description="The bpfman-agent manage bpfman programs on every node. ." \
      io.openshift.tags="bpfman-agent" \
      version="0.5.6" \
      vendor="Red Hat, Inc."

ENTRYPOINT ["/bpfman-agent"]
